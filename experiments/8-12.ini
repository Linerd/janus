[general]
; Test traffic
traffic-test=trace/data/8-12-0.3-400-compressed/traffic

; EWMA training traffic
traffic-training=trace/data/8-12-0.3-400-compressed/traffic

; Network setting
; Jupiter format is: jupiter-#core-#pod-#agg/pod-#tor/pod-bw
network = jupiter-8-8-8-12-1500000

; MOp duration
mop-duration = 1

[failure]
; Number of concurrent switch failures to consider
concurrent-switch-failure = 0

; Probability of a single switch failure
concurrent-switch-probability=0.00

; Can choose between independent or warm (maybe later add independent + warm)
failure-mode=independent
;independent

; Cost of a switch failure in the warm mode.  The idea is that you have to
; replace the ASIC if the switch fails during the warm upgrade.  This could
; also be a distribution but that's for another day, another time.
failure-warm-cost=100

[scenario]
time-begin = 100
time-end = 300
time-step = 10

[predictor]
; Predictor type
type = perfect

; Coefficient of EWMA
ewma-coeff = 0.9

[criteria]
; The amount of minimum promised throughput that if the user is above
; and experiences congestion would be fine.
promised-throughput = 20000000000

; Risk functions
;risk-violation=stepped-0/100-95/40-99/30-99.50/20-99.99/0-100/0
risk-violation=stepped-0/100-95/40-99/30-99.95/20-99.99/0-100/0

; Plan time criteria
; Supported types are:
;   cutoff-at-[XX] which means that we want to bound the plan to XX steps
criteria-time=cutoff-at-8
;/0,0,0,0,10,20,30,40
;criteria-time=cutoff-at-8/0,0,0,0,10,20,30,40
;/1,2,3,4
; criteria-time=cutoff-at-4/50,50,50,50

; Plan length criteria
criteria-length=maximize

; Risk delay
risk-delay=dip-at-20

[pug]
backtrack-traffic-count=10
backtrack-direction=backward

[cache]
rv-cache-dir = trace/data/8-12-0.3-400-compressed/cache/
ewma-cache-dir = trace/data/8-12-0.3-400-compressed/ewma/
perfect-cache-dir = trace/data/8-12-0.3-400-compressed/perfect/

[upgrade]
; Switch upgrade list.  Format is: swtype-location-count-color
; swtype can be core or pod/agg at the moment
switch-group = core-0-8-0
; switch-group = pod/agg-0-8-1
; switch-group = pod/agg-1-8-1
; switch-group = pod/agg-2-8-1
; switch-group = pod/agg-3-8-1
switch-group = pod/agg-4-8-1
;  switch-group = pod/agg-5-8-1
switch-group = pod/agg-6-8-1
;  switch-group = pod/agg-7-8-1

; Freedom is the granularity of planning for jupiter topology
freedom = 8-8
